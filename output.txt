Sun Jan 24 16:43:14 PST 2021
Linux csslab1.uwb.edu 3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
uid=930027(schau623) gid=2120930027(schau623) groups=2120930027(schau623),605559(lab-access)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
bstmap.cpp: In constructor ‘BSTMap::BSTMap(const std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >&)’:
bstmap.cpp:34:22: error: no match for ‘operator[]’ (operand types are ‘const std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >’ and ‘const std::pair<std::__cxx11::basic_string<char>, long unsigned int>’)
   34 |     theNode->data = v[i];
      |                      ^
In file included from /usr/local/gcc-9.2.0/include/c++/9.2.0/vector:67,
                 from /usr/local/gcc-9.2.0/include/c++/9.2.0/queue:61,
                 from bstmap.h:16,
                 from bstmap.cpp:8:
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1040:7: note: candidate: ‘std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::pair<std::__cxx11::basic_string<char>, long unsigned int>; _Alloc = std::allocator<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >; std::vector<_Tp, _Alloc>::reference = std::pair<std::__cxx11::basic_string<char>, long unsigned int>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’
 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^~~~~~~~
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1040:28: note:   no known conversion for argument 1 from ‘const std::pair<std::__cxx11::basic_string<char>, long unsigned int>’ to ‘std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >::size_type’ {aka ‘long unsigned int’}
 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |                  ~~~~~~~~~~^~~
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1058:7: note: candidate: ‘std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = std::pair<std::__cxx11::basic_string<char>, long unsigned int>; _Alloc = std::allocator<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >; std::vector<_Tp, _Alloc>::const_reference = const std::pair<std::__cxx11::basic_string<char>, long unsigned int>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’
 1058 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^~~~~~~~
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1058:28: note:   no known conversion for argument 1 from ‘const std::pair<std::__cxx11::basic_string<char>, long unsigned int>’ to ‘std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >::size_type’ {aka ‘long unsigned int’}
 1058 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |                  ~~~~~~~~~~^~~
=====================================================
2. Runs and produces correct output
=====================================================
./create-output.sh: line 69: ./a.out: No such file or directory
=====================================================
3. clang-tidy warnings are fixed
=====================================================
17016 warnings generated.
30352 warnings and 1 error generated.
Error while processing /home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/bstmap.cpp.
48111 warnings and 1 error generated.
Error while processing /home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/bstmapprinter.cpp.
63905 warnings and 1 error generated.
Error while processing /home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/main.cpp.
76958 warnings and 1 error generated.
Error while processing /home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/testac.cpp.
90550 warnings and 1 error generated.
Error while processing /home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/testbst.cpp.
/home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/bstmap.cpp:34:22: error: no viable overloaded operator[] for type 'const vector<BSTMap::value_type>' (aka 'const vector<pair<basic_string<char>, unsigned long> >') [clang-diagnostic-error]
    theNode->data = v[i];
                     ^
/opt/rh/devtoolset-8/root/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:948:7: note: candidate function not viable: no known conversion from 'const std::pair<std::basic_string<char>, unsigned long>' to 'std::vector::size_type' (aka 'unsigned long') for 1st argument
      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      ^
/opt/rh/devtoolset-8/root/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:930:7: note: candidate function not viable: 'this' argument has type 'const vector<BSTMap::value_type>' (aka 'const vector<pair<basic_string<char>, unsigned long> >'), but method is not marked const
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/bstmap.cpp:61:7: error: do not use 'else' after 'return' [readability-else-after-return,-warnings-as-errors]
    } else if ((current->left != nullptr) && (current->right == nullptr)) {
      ^~~~~~~~
/home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/bstmap.cpp:87:5: error: do not use 'else' after 'return' [readability-else-after-return,-warnings-as-errors]
  } else if (current->data.first > toAdd->data.first) {
    ^~~~~~~~
/home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/bstmap.cpp:167:5: error: do not use 'else' after 'return' [readability-else-after-return,-warnings-as-errors]
  } else if (k == curr->data.first) {
    ^~~~~~~~
/home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/bstmap.cpp:195:3: error: redundant return statement at the end of a function with a void return type [readability-redundant-control-flow,-warnings-as-errors]
  return;
~~^~~~~~~
/home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/bstmap.cpp:313:5: error: do not use 'else' after 'return' [readability-else-after-return,-warnings-as-errors]
  } else if ((tree1 == nullptr && tree2 != nullptr) ||
    ^~~~~~~~
/home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/bstmap.h:112:10: error: constructor does not initialize these fields: left, right [cppcoreguidelines-pro-type-member-init,-warnings-as-errors]
  struct Node {
         ^
/home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/bstmapprinter.cpp:77:14: error: narrowing conversion from 'typename __gnu_cxx::__promote_2<int, int>::__type' (aka 'double') to 'int' [bugprone-narrowing-conversions,-warnings-as-errors]
  int maxN = pow(2, depth - 1);
             ^
/home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/testbst.cpp:162:10: error: the 'empty' method should be used to check for emptiness instead of 'size' [readability-container-size-empty,-warnings-as-errors]
  assert(tree.size() == 0);
         ^~~~~~~~~~~~~~~~~
         tree.empty()
/usr/include/assert.h:87:5: note: expanded from macro 'assert'
  ((expr)                                                               \
    ^
/home/NETID/schau623/2021wi343b-autocomplete-alan-lai1738/bstmap.h:58:8: note: method 'BSTMap'::empty() defined here
  bool empty() const;
       ^
Suppressed 90542 warnings (90540 in non-user code, 2 NOLINT).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
8 warnings treated as errors
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./autocomplete.cpp
Running clang-format on ./bstmap.cpp
Running clang-format on ./bstmapprinter.cpp
9,10c9
< ostream &operator<<(ostream &out, const BSTMap::Node &n) 
< {
---
> ostream &operator<<(ostream &out, const BSTMap::Node &n) {
17,18c16
< ostream &operator<<(ostream &out, const BSTMap &bst) 
< {
---
> ostream &operator<<(ostream &out, const BSTMap &bst) {
20c18
<   //BSTMap::printSideways(out, bst.root);
---
>   // BSTMap::printSideways(out, bst.root);
22c20
<    //BSTMap::printVertical([out], bst.root);
---
>   // BSTMap::printVertical([out], bst.root);
36,37c34
< ostream &BSTMap::printSideways(ostream &out, const Node *curr, int level) 
< {
---
> ostream &BSTMap::printSideways(ostream &out, const Node *curr, int level) {
Running clang-format on ./main.cpp
1d0
< #include "bstmap.h"
2a2
> #include "bstmap.h"
Running clang-format on ./testac.cpp
37,38c37
< void studentACTest01()
< {
---
> void studentACTest01() {
51,52c50
< void studentACTest02()
< {
---
> void studentACTest02() {
75d72
< 
Running clang-format on ./testbst.cpp
110,111c110
< void getAllTest()
< {
---
> void getAllTest() {
128c127
<   
---
> 
140,142c139,140
< void catTest()
< {
<    cout << "Starting catTest" << endl;
---
> void catTest() {
>   cout << "Starting catTest" << endl;
=====================================================
5. No memory leaks using g++
=====================================================
bstmap.cpp: In constructor ‘BSTMap::BSTMap(const std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >&)’:
bstmap.cpp:34:22: error: no match for ‘operator[]’ (operand types are ‘const std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >’ and ‘const std::pair<std::__cxx11::basic_string<char>, long unsigned int>’)
   34 |     theNode->data = v[i];
      |                      ^
In file included from /usr/local/gcc-9.2.0/include/c++/9.2.0/vector:67,
                 from /usr/local/gcc-9.2.0/include/c++/9.2.0/queue:61,
                 from bstmap.h:16,
                 from bstmap.cpp:8:
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1040:7: note: candidate: ‘std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::pair<std::__cxx11::basic_string<char>, long unsigned int>; _Alloc = std::allocator<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >; std::vector<_Tp, _Alloc>::reference = std::pair<std::__cxx11::basic_string<char>, long unsigned int>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’
 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^~~~~~~~
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1040:28: note:   no known conversion for argument 1 from ‘const std::pair<std::__cxx11::basic_string<char>, long unsigned int>’ to ‘std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >::size_type’ {aka ‘long unsigned int’}
 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |                  ~~~~~~~~~~^~~
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1058:7: note: candidate: ‘std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = std::pair<std::__cxx11::basic_string<char>, long unsigned int>; _Alloc = std::allocator<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >; std::vector<_Tp, _Alloc>::const_reference = const std::pair<std::__cxx11::basic_string<char>, long unsigned int>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’
 1058 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^~~~~~~~
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1058:28: note:   no known conversion for argument 1 from ‘const std::pair<std::__cxx11::basic_string<char>, long unsigned int>’ to ‘std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >::size_type’ {aka ‘long unsigned int’}
 1058 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |                  ~~~~~~~~~~^~~
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
bstmap.cpp: In constructor ‘BSTMap::BSTMap(const std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >&)’:
bstmap.cpp:34:22: error: no match for ‘operator[]’ (operand types are ‘const std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >’ and ‘const std::pair<std::__cxx11::basic_string<char>, long unsigned int>’)
   34 |     theNode->data = v[i];
      |                      ^
In file included from /usr/local/gcc-9.2.0/include/c++/9.2.0/vector:67,
                 from /usr/local/gcc-9.2.0/include/c++/9.2.0/queue:61,
                 from bstmap.h:16,
                 from bstmap.cpp:8:
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1040:7: note: candidate: ‘std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::pair<std::__cxx11::basic_string<char>, long unsigned int>; _Alloc = std::allocator<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >; std::vector<_Tp, _Alloc>::reference = std::pair<std::__cxx11::basic_string<char>, long unsigned int>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’
 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^~~~~~~~
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1040:28: note:   no known conversion for argument 1 from ‘const std::pair<std::__cxx11::basic_string<char>, long unsigned int>’ to ‘std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >::size_type’ {aka ‘long unsigned int’}
 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |                  ~~~~~~~~~~^~~
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1058:7: note: candidate: ‘std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = std::pair<std::__cxx11::basic_string<char>, long unsigned int>; _Alloc = std::allocator<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >; std::vector<_Tp, _Alloc>::const_reference = const std::pair<std::__cxx11::basic_string<char>, long unsigned int>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’
 1058 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^~~~~~~~
/usr/local/gcc-9.2.0/include/c++/9.2.0/bits/stl_vector.h:1058:28: note:   no known conversion for argument 1 from ‘const std::pair<std::__cxx11::basic_string<char>, long unsigned int>’ to ‘std::vector<std::pair<std::__cxx11::basic_string<char>, long unsigned int> >::size_type’ {aka ‘long unsigned int’}
 1058 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |                  ~~~~~~~~~~^~~
cat: valgrind-output.txt: No such file or directory
=====================================================
7. Tests have full code coverage
=====================================================
bstmap.cpp:34:22: error: no viable overloaded operator[] for type 'const vector<BSTMap::value_type>' (aka 'const vector<pair<basic_string<char>, unsigned long> >')
    theNode->data = v[i];
                    ~^~
/opt/rh/devtoolset-8/root/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:948:7: note: candidate function not viable: no known conversion from 'const std::pair<std::basic_string<char>, unsigned long>' to 'std::vector::size_type' (aka 'unsigned long') for 1st argument
      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      ^
/opt/rh/devtoolset-8/root/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:930:7: note: candidate function not viable: 'this' argument has type 'const vector<BSTMap::value_type>' (aka 'const vector<pair<basic_string<char>, unsigned long> >'), but method is not marked const
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
1 error generated.
ERROR: ./check-code-coverage.sh: Failed to create executable
Sun Jan 24 16:44:10 PST 2021
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
